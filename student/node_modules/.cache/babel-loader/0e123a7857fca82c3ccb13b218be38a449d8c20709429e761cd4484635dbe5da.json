{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namit\\\\OneDrive\\\\Desktop\\\\new\\\\student\\\\src\\\\components\\\\Events\\\\Eventscon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Eventscon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Eventscon() {\n  _s();\n  const [festData, setFestData] = useState([]);\n  const [selectedFest, setSelectedFest] = useState(null);\n  useEffect(() => {\n    // Fetch fest data from the backend API\n    axios.get(\"http://localhost:8000/fests\").then(response => {\n      setFestData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching fest data:\", error);\n    });\n  }, []);\n  const handleFestClick = fest => {\n    setSelectedFest(fest);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fest-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fest-heading\",\n      children: \"College Festivals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fest-grid\",\n      children: festData.map(fest => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fest-item\",\n        onClick: () => handleFestClick(fest),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fest-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fest-card-front\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fest.image,\n              alt: fest.name,\n              className: \"fest-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fest-card-back\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fest-description\",\n              children: fest.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, fest.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedFest && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fest-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"fest-name\",\n        children: selectedFest.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fest-description\",\n        children: selectedFest.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Eventscon, \"RoiX45ReuCBrN2TRhtCPX9FHH20=\");\n_c = Eventscon;\nexport default Eventscon;\nvar _c;\n$RefreshReg$(_c, \"Eventscon\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Eventscon","_s","festData","setFestData","selectedFest","setSelectedFest","get","then","response","data","catch","error","console","handleFestClick","fest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","image","alt","name","description","id","_c","$RefreshReg$"],"sources":["C:/Users/namit/OneDrive/Desktop/new/student/src/components/Events/Eventscon.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Eventscon.css\";\r\n\r\nfunction Eventscon() {\r\n  const [festData, setFestData] = useState([]);\r\n  const [selectedFest, setSelectedFest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch fest data from the backend API\r\n    axios\r\n      .get(\"http://localhost:8000/fests\")\r\n      .then((response) => {\r\n        setFestData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching fest data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleFestClick = (fest) => {\r\n    setSelectedFest(fest);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fest-container\">\r\n      <h2 className=\"fest-heading\">College Festivals</h2>\r\n      <div className=\"fest-grid\">\r\n        {festData.map((fest) => (\r\n          <div\r\n            key={fest.id}\r\n            className=\"fest-item\"\r\n            onClick={() => handleFestClick(fest)}\r\n          >\r\n            <div className=\"fest-card\">\r\n              <div className=\"fest-card-front\">\r\n                <img src={fest.image} alt={fest.name} className=\"fest-image\" />\r\n              </div>\r\n              <div className=\"fest-card-back\">\r\n                <p className=\"fest-description\">{fest.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedFest && (\r\n        <div className=\"fest-details\">\r\n          <h3 className=\"fest-name\">{selectedFest.name}</h3>\r\n          <p className=\"fest-description\">{selectedFest.description}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Eventscon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}