{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namit\\\\OneDrive\\\\Desktop\\\\new\\\\student\\\\src\\\\pages\\\\Forgotten.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgottenPassword = () => {\n  _s();\n  const [forgotUsername, setForgotUsername] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleUsernameChange = event => {\n    setForgotUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setNewPassword(event.target.value);\n  };\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    try {\n      if (newPassword !== confirmPassword) {\n        setErrorMessage(\"Passwords do not match\");\n        return;\n      }\n      const res = await axios.post(\"http://localhost:8000/forgot-password\", {\n        username: forgotUsername,\n        newPassword: newPassword\n      });\n      console.log(res);\n      setForgotUsername(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n      setErrorMessage(\"\");\n      setSuccessMessage(\"Password reset successfully\");\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(\"Failed to reset password. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), !successMessage && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Enter your username\",\n        value: forgotUsername,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        name: \"newPassword\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"forgot-password-button\",\n        onClick: handleForgotPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgottenPassword, \"CeLNGMQwh9a9xwPZvWxtm3mBTpw=\");\n_c = ForgottenPassword;\nexport default ForgottenPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgottenPassword\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","ForgottenPassword","_s","forgotUsername","setForgotUsername","errorMessage","setErrorMessage","successMessage","setSuccessMessage","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleConfirmPasswordChange","handleForgotPassword","e","preventDefault","res","post","username","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","required","type","name","placeholder","onChange","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/namit/OneDrive/Desktop/new/student/src/pages/Forgotten.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Login.css\";\r\n\r\nconst ForgottenPassword = () => {\r\n  const [forgotUsername, setForgotUsername] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setForgotUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (event) => {\r\n    setConfirmPassword(event.target.value);\r\n  };\r\n\r\n  const handleForgotPassword = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newPassword !== confirmPassword) {\r\n        setErrorMessage(\"Passwords do not match\");\r\n        return;\r\n      }\r\n\r\n      const res = await axios.post(\"http://localhost:8000/forgot-password\", {\r\n        username: forgotUsername,\r\n        newPassword: newPassword,\r\n      });\r\n\r\n      console.log(res);\r\n      setForgotUsername(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setErrorMessage(\"\");\r\n      setSuccessMessage(\"Password reset successfully\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setErrorMessage(\"Failed to reset password. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n      {successMessage && <p className=\"success\">{successMessage}</p>}\r\n      {!successMessage && (\r\n        <form>\r\n          {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n          <label>Username</label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            value={forgotUsername}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <label>New Password</label>\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm new password\"\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange}\r\n          />\r\n          <button\r\n            className=\"forgot-password-button\"\r\n            onClick={handleForgotPassword}\r\n          >\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n      )}\r\n      <p>\r\n        Remember your password? <Link to=\"/login\">Login</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}